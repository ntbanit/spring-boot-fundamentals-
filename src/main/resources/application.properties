# START: Section #3 - Basics #
spring.application.name=spring-boot-fundamentals
# END: Section #3: Basics #

# START: Section #5 - Spring Data JPA #
spring.jpa.show-sql=true
# END: Section #5: Spring Data JPA #

# START: Section #6 - Create REST CRUD API #
spring.datasource.url=jdbc:mysql://localhost:3306/mydb
spring.datasource.username=root
spring.datasource.password=admin1234


#server.servlet.context-path=/lms

#logging.level.org.springframework.web=DEBUG
#logging.level.org.eclipse.jetty=DEBUG
# END: Section #6 - Create REST CRUD API #

# START: Section #8 - Spring Boot Profiles #
products.services.url=http://localhost:8080/api/products/
#spring.profiles.active=dev
# END: Section #8 - Spring Boot Profiles #


# START: Section #9 - Logging #
logging.file.name=logs/application.log
#logging.level.root=info
#logging.level.org.springframework=error
# END: Section #9 - Logging #

# START: Section #10 - Health Check & Metrisc #
management.endpoint.health.show-details=always
#management.info.env.enabled = true
management.endpoints.web.exposure.include=*
management.endpoint.metrics.enabled=true
management.metrics.enable.all=true
# END: Section #10 - Health Check & Metrisc #

# START: Section #11 - Spring Security #
#spring.security.user.name=user
#spring.security.user.password=password
# END: Section #11 - Spring Security #


# START: Section #12 - Thymeleaf #
spring.thymeleaf.cache=false
# END: Section #12 - Thymeleaf #


# START: Section #14 - Spring Batch 
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.batch.jdbc.initialize-schema=always
spring.jpa.hibernate.ddl-auto=update
logging.level.org.springframework.batch=DEBUG
logging.level.org.springframework.jdbc=DEBUG
# END: Section #14 - Spring Batch #


springjms.myQueue=myQueue
spring.activemq.broker-url=tcp://localhost:61616
spring.activemq.user=admin
spring.activemq.password=admin

springdoc.swagger-ui.path=/swagger-ui

uploadDir=C:/test-upload/